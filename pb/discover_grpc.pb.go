// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.29.3
// source: pb/discover.proto

package discoverservicepb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	DiscoverService_GetParamInBody_FullMethodName       = "/discoverservicepb.DiscoverService/GetParamInBody"
	DiscoverService_GetParamInHeader_FullMethodName     = "/discoverservicepb.DiscoverService/GetParamInHeader"
	DiscoverService_PostUnstructuredData_FullMethodName = "/discoverservicepb.DiscoverService/PostUnstructuredData"
)

// DiscoverServiceClient is the client API for DiscoverService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DiscoverServiceClient interface {
	GetParamInBody(ctx context.Context, in *GetParamInBodyRequest, opts ...grpc.CallOption) (*Response, error)
	GetParamInHeader(ctx context.Context, in *GetParamInHeaderRequest, opts ...grpc.CallOption) (*Response, error)
	// Sends another greeting
	PostUnstructuredData(ctx context.Context, in *PostUnstructuredDataRequest, opts ...grpc.CallOption) (*PostUnstructuredDataResponse, error)
}

type discoverServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDiscoverServiceClient(cc grpc.ClientConnInterface) DiscoverServiceClient {
	return &discoverServiceClient{cc}
}

func (c *discoverServiceClient) GetParamInBody(ctx context.Context, in *GetParamInBodyRequest, opts ...grpc.CallOption) (*Response, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Response)
	err := c.cc.Invoke(ctx, DiscoverService_GetParamInBody_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoverServiceClient) GetParamInHeader(ctx context.Context, in *GetParamInHeaderRequest, opts ...grpc.CallOption) (*Response, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Response)
	err := c.cc.Invoke(ctx, DiscoverService_GetParamInHeader_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *discoverServiceClient) PostUnstructuredData(ctx context.Context, in *PostUnstructuredDataRequest, opts ...grpc.CallOption) (*PostUnstructuredDataResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PostUnstructuredDataResponse)
	err := c.cc.Invoke(ctx, DiscoverService_PostUnstructuredData_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DiscoverServiceServer is the server API for DiscoverService service.
// All implementations must embed UnimplementedDiscoverServiceServer
// for forward compatibility.
type DiscoverServiceServer interface {
	GetParamInBody(context.Context, *GetParamInBodyRequest) (*Response, error)
	GetParamInHeader(context.Context, *GetParamInHeaderRequest) (*Response, error)
	// Sends another greeting
	PostUnstructuredData(context.Context, *PostUnstructuredDataRequest) (*PostUnstructuredDataResponse, error)
	mustEmbedUnimplementedDiscoverServiceServer()
}

// UnimplementedDiscoverServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedDiscoverServiceServer struct{}

func (UnimplementedDiscoverServiceServer) GetParamInBody(context.Context, *GetParamInBodyRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetParamInBody not implemented")
}
func (UnimplementedDiscoverServiceServer) GetParamInHeader(context.Context, *GetParamInHeaderRequest) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetParamInHeader not implemented")
}
func (UnimplementedDiscoverServiceServer) PostUnstructuredData(context.Context, *PostUnstructuredDataRequest) (*PostUnstructuredDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostUnstructuredData not implemented")
}
func (UnimplementedDiscoverServiceServer) mustEmbedUnimplementedDiscoverServiceServer() {}
func (UnimplementedDiscoverServiceServer) testEmbeddedByValue()                         {}

// UnsafeDiscoverServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DiscoverServiceServer will
// result in compilation errors.
type UnsafeDiscoverServiceServer interface {
	mustEmbedUnimplementedDiscoverServiceServer()
}

func RegisterDiscoverServiceServer(s grpc.ServiceRegistrar, srv DiscoverServiceServer) {
	// If the following call pancis, it indicates UnimplementedDiscoverServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&DiscoverService_ServiceDesc, srv)
}

func _DiscoverService_GetParamInBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetParamInBodyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoverServiceServer).GetParamInBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscoverService_GetParamInBody_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoverServiceServer).GetParamInBody(ctx, req.(*GetParamInBodyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscoverService_GetParamInHeader_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetParamInHeaderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoverServiceServer).GetParamInHeader(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscoverService_GetParamInHeader_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoverServiceServer).GetParamInHeader(ctx, req.(*GetParamInHeaderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiscoverService_PostUnstructuredData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostUnstructuredDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiscoverServiceServer).PostUnstructuredData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DiscoverService_PostUnstructuredData_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiscoverServiceServer).PostUnstructuredData(ctx, req.(*PostUnstructuredDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// DiscoverService_ServiceDesc is the grpc.ServiceDesc for DiscoverService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DiscoverService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "discoverservicepb.DiscoverService",
	HandlerType: (*DiscoverServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetParamInBody",
			Handler:    _DiscoverService_GetParamInBody_Handler,
		},
		{
			MethodName: "GetParamInHeader",
			Handler:    _DiscoverService_GetParamInHeader_Handler,
		},
		{
			MethodName: "PostUnstructuredData",
			Handler:    _DiscoverService_PostUnstructuredData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/discover.proto",
}
